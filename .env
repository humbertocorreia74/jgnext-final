# 🚀 JGNEXT Afiliados

Sistema inteligente de automação e gestão de afiliados com integração total à Hotmart, OpenAI e Zoho Mail.

Este projeto foi criado para oferecer uma estrutura robusta e automatizada para captação, segmentação, monitoramento e ativação de leads e afiliados de forma 100% online.

---

## 📦 Tecnologias Utilizadas

- [Flask](https://flask.palletsprojects.com/) - Microframework web em Python
- [Gunicorn](https://gunicorn.org/) - Servidor de aplicação WSGI
- [Python Dotenv](https://pypi.org/project/python-dotenv/) - Gerenciador de variáveis de ambiente
- [Requests](https://pypi.org/project/requests/) - Requisições HTTP
- [PyMySQL](https://pypi.org/project/PyMySQL/) - Conexão com banco de dados MySQL
- [OpenAI API](https://openai.com/) - Geração de conteúdo com inteligência artificial
- [BeautifulSoup4](https://pypi.org/project/beautifulsoup4/) - Web scraping e análise de HTML

---

## ⚙️ Como rodar localmente

```bash
# Clone o repositório
git clone https://github.com/humbertocorreia74/JGNEXT4.git
cd JGNEXT4

# Crie um ambiente virtual
python3 -m venv venv
source venv/bin/activate

# Instale as dependências
pip install -r requirements.txt

# Execute o projeto
python src/main.py
```

---

## 🔐 Variáveis de Ambiente

Crie um arquivo `.env` na raiz do projeto com os seguintes dados:

```env
HOTMART_CLIENT_ID=seu_client_id
HOTMART_CLIENT_SECRET=seu_client_secret
OPENAI_API_KEY=sua_openai_key

ZOHO_MAIL_USERNAME=seu_email@jgnext.com
ZOHO_MAIL_PASSWORD=sua_senha_de_app
ZOHO_MAIL_SMTP_SERVER=smtp.zoho.com
ZOHO_MAIL_SMTP_PORT=587

DATABASE_URL=mysql+pymysql://usuario:senha@host/banco
SECRET_KEY=uma_chave_muito_secreta
```

---

## 📅 Automação com CRON (opcional)

O sistema permite automatizar tarefas com CRON Jobs, como:

- Captura de leads
- Análise de campanhas
- Verificação de metas

Scripts disponíveis:

```bash
cron_lead_scanning.py
cron_campaign_analysis.py
cron_sales_sync.py
cron_goal_check.py
```

---

## 🌐 Deploy no Render

Este projeto está configurado para deploy automático via [Render.com](https://render.com):

- `Procfile` incluso com comando:
  ```
  web: gunicorn src.main:app
  ```

- Deploy feito a partir da branch `main`

---

## 🤝 Contribuição

Sugestões, melhorias ou pull requests são bem-vindos!  
Entre em contato ou abra uma issue.

---

## 📫 Contato

Criado por **Humberto Correia**  
📧 contato@jgnext.com  
🌐 [www.jgnext.com](https://www.jgnext.com)
# Atualizado dia 07/07
